Tu souhaites créer une interface similaire à celle de l’image (un système de téléchargement de fichiers) où les fichiers ou dossiers téléchargés s'affichent sur ton portfolio, c'est bien ça ?

Si c'est le cas, tu peux utiliser une combinaison de HTML, CSS et JavaScript pour mettre cela en place. Je vais te donner une idée de comment tu pourrais le faire :

### 1. **HTML** : Interface de téléchargement

Tu vas commencer par créer un formulaire simple pour permettre à l'utilisateur de sélectionner des fichiers.

```html
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Portfolio</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="upload-container">
        <h1>Compress Your Files</h1>
        <input type="file" id="fileInput" multiple>
        <div id="fileList"></div>
    </div>
    <script src="script.js"></script>
</body>
</html>
```

### 2. **CSS** : Style de la zone de téléchargement

Ensuite, tu stylises la zone de téléchargement pour qu'elle ressemble à l'image que tu as partagée.

```css
.upload-container {
    text-align: center;
    background-color: #D8E3F0;
    padding: 40px;
    border-radius: 15px;
    width: 60%;
    margin: 50px auto;
}

.upload-container h1 {
    color: #F26B5B;
    font-family: Arial, sans-serif;
}

#fileInput {
    display: none;
}

label {
    background-color: #F26B5B;
    color: white;
    padding: 20px 40px;
    border-radius: 10px;
    cursor: pointer;
}

#fileList {
    margin-top: 20px;
}

#fileList p {
    background-color: #fff;
    padding: 10px;
    border-radius: 5px;
    border: 1px solid #ddd;
    margin: 5px;
}
```

### 3. **JavaScript** : Afficher les fichiers téléchargés

Voici un script JavaScript qui va afficher les fichiers ou dossiers que l'utilisateur a téléchargés dans une liste dynamique.

```javascript
document.getElementById('fileInput').addEventListener('change', function(event) {
    const fileList = document.getElementById('fileList');
    fileList.innerHTML = ''; // Reset the list before adding new files
    
    const files = event.target.files;
    
    for (let i = 0; i < files.length; i++) {
        const fileItem = document.createElement('p');
        fileItem.textContent = files[i].name;
        fileList.appendChild(fileItem);
    }
});
```

### Explication :

1. **HTML** crée l'interface de téléchargement avec un champ de fichier.
2. **CSS** applique un style similaire à celui de l'image que tu as partagée, avec des couleurs et des bordures.
3. **JavaScript** permet de gérer l'ajout des fichiers dans une liste dynamique (`fileList`). Chaque fichier téléchargé sera affiché par son nom sous la zone de téléchargement.

Si tu veux inclure des dossiers, assure-toi que ton navigateur et ta configuration autorisent le téléchargement de dossiers (ce qui est possible via l'attribut `webkitdirectory` dans le champ `<input>`).

### Exemple HTML mis à jour pour les dossiers :

```html
<input type="file" id="fileInput" multiple webkitdirectory>
```

Cela permettra à l'utilisateur de sélectionner des dossiers, et tous les fichiers dans ces dossiers s'afficheront dans ta liste.

Si tu veux d'autres améliorations ou précisions, n'hésite pas à demander !
